***********************************************************************
* Working with Text Editors
***********************************************************************

This package includes syntax highlighting modes for both SubEthaEdit, Coda, TextMate, and vim.

+ SubEthaEdit

	- NOTE: SubEthaEdit now has built-in support for Objective-J, but the copy included here is probably more up to date.
	- Unarchive Tools/Editors/Objective-J.mode.zip
	- Double click the generated Objective-J.mode file

+ Coda

	- NOTE: Coda now has built-in support for Objective-J, but the copy included here is probably more up to date.
	- Unarchive Tools/Editors/Objective-J.mode.zip
	- Place the generated Objective-J.mode file in ~/Library/Application Support/Coda/Modes

+ TextMate (Thanks to Michael Sheets for providing us with this!)

	- NOTE: TextMate now has built-in support for Objective-J, but the copy included here is probably more up to date.
	- Unarchive Tools/Editors/JavaScript Objective-J.tmbundle.zip
	- Double click the generated "JavaScript Objective-J.tmbundle" file

+ Vim (Thanks to Shawn MacIntyre for providing us with this!)

	- Place Tools/Editors/objj.vim in ~/.vim/syntax/
	- in ~/.vimrc, add:

		syntax on
		au BufNewFile,BufRead *.j setf objj


Put the file in objj.vim in ~/.vim/syntax/
In ~/.vimrc add:
syntax on
au BufNewFile,BufRead *.j setf objj
This will load the obj-j syntax highlighting when you open files ending in .j


***********************************************************************
* Installing the Development Tools
***********************************************************************

1. Navigate to Tools (the directory containing this README).
2. Enter "sudo sh install-tools"
3. You should see this: "Cappuccino Tools Installed"
4. You can optionally specify a global Build directory. If you wish to use it, you must set the CAPP_BUILD environment variable. Building Cappuccino from source requires this, for example. As does using the -l flag in the capp tool.

**********************************************************************
* objj
**********************************************************************

objj is a command line Objective-J interpreter and interactive console.

**********************************************************************
* objjc
**********************************************************************

objjc is a static pre-interpreter for Objective-J. It will take Objective-J files and essentially convert them to JavaScript.

***********************************************************************
* capp
***********************************************************************

capp is a simple tool for creating Objective-J applications.

    capp COMMAND [OPTIONS]

    cap gen PROJECT_PATH [-t TEMPLATE_NAME] [-l] [-f] to create new projects

    capp config name value to configure capp with your information (such as user.name, user.email, etc.)
